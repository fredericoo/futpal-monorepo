name: CI/CD

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check-and-test:
    name: Check and Test
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node and install dependencies
        uses: ./.github/composite-actions/setup

      - name: ESLint
        run: pnpm lint

      - name: Typescript
        run: pnpm typecheck

  check-if-needs-deploying:
    name: Check if needs deploying
    runs-on: ubuntu-latest
    needs: [check-and-test]
    outputs:
      is-cached: ${{ steps.needs-deploying.outcome }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check if app needs deploying
        id: needs-deploying
        # returns 0 if there are no changes in build, 1 otherwise
        run: npx turbo-ignore --task=build
        continue-on-error: true

  # deploy:
  #   name: "[FE] Deploy to Staging"
  #   environment: staging
  #   if: needs.check-if-needs-deploying.outputs.is-cached != 'success'
  #   needs: [check-if-needs-deploying]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     deployments: write

  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: pnpm build
  #       env:
  #         VITE_API_URL: "http://localhost:3000"
  #     - name: Publish
  #       uses: cloudflare/pages-action@1
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         projectName: ${{ matrix.projectName }}
  #         directory: ./apps/frontend/dist
  #         gitHubToken: ${{ secrets.GITHUB_TOKEN }}

